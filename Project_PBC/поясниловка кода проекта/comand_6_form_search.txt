формы

_________________________
переходим в catalog.html раздел формы правим код

<!-- Форма фильтров -->
                        <div class="dropdown mb-2">
                            <button class="btn btn-secondary dropdown-toggle btn-dark" type="button" data-bs-toggle="dropdown"
                                aria-expanded="false">
                                Фильтры
                            </button>
                    *******************
                            <form action="{% url "catalog:index" slug_url %}" method="get" class="dropdown-menu bg-dark" data-bs-theme="dark">


во views из goods вносим изменения

def catalog(request, category_slug):

    page = request.GET.get('page', 1)

    **************
    on_sale = request.GET.get('on_sale', None)
    order_by = request.GET.get('order_by', None)
***********

    if category_slug == 'oll':
        goods = Products.objects.all()
    else:
        goods = get_list_or_404(Products.objects.filter(category__slug=category_slug))
********************
    if on_sale:
        goods = Products.objects.filter(discount__gt=0)
    
    if order_by:
        goods = goods.order_by(order_by)
***************


далее catalod.html
сделать комент - {% comment %} <input type="hidden" name="q" value="request.GET.q"> {% endcomment %}

и во views изменям if and order_by != "default"

   if order_by and order_by != "default":
        goods = goods.order_by(order_by)

_______________________________________-
прописываем чтобы кнопка в выбранном фильтре сохранялась
в catalog.html

_________________________
                            <form action="{% url "catalog:index" slug_url %}" method="get" class="dropdown-menu bg-dark" data-bs-theme="dark">
                                <div class="form-check text-white mx-3">
                                    <input class="form-check-input" type="checkbox" name="on_sale" id="flexCheckDefault" value="on"
                                    ***************** 
                                    {% if request.GET.on_sale == "on" %}checked{% endif %}>
                                    *****************
                                    {% comment %} <input type="hidden" name="q" value="request.GET.q"> {% endcomment %}
                                    <label class="form-check-label" for="flexCheckDefault">
                                        Товары по акции
                                    </label>
                                </div>
<p class="text-white mx-3 mt-3">Сортировать:</p>
                                <div class="form-check text-white mx-3">
                                    <input class="form-check-input" type="radio" name="order_by" id="flexRadioDefault1" value="default"
                                    ******************** 
                                    {% if not request.GET.order_by or request.GET.order_by == "default" %}checked{% endif %}>
                                    *******************
                                    <label class="form-check-label" for="flexRadioDefault1">
                                        По умолчанию
                                    </label>
                                </div>
                                <div class="form-check text-white mx-3">
                                    <input class="form-check-input" type="radio" name="order_by" id="flexRadioDefault2" value="price" 
                                    ****************
                                    {% if request.GET.order_by == "price" %}checked{% endif %}>
                                    ******************
                                    <label class="form-check-label" for="flexRadioDefault2">
                                        От дешевых к дорогим
                                    </label>
                                </div>
                                <div class="form-check text-white mx-3">
                                    <input class="form-check-input" type="radio" name="order_by" id="flexRadioDefault3" value="-price"
                                    **************** 
                                    {% if request.GET.order_by == "-price" %}checked{% endif %}>
                                    ***************
                                    <label class="form-check-label" for="flexRadioDefault3">
                                        От дорогих к дешевым

_____________________________________________делаем что бы при переключении страниц фильтр сохранялся
открываем goods_tads дописываем код

from django.utils.http import urlencode

@register.simple_tag(takes_context=True)
def change_params(context, **kwargs):
    query= context['request'].GET.dict()
    query.update(kwargs)
    return urlencode(query)

далее идём в catalog.html

{% load goods_tags %}               -- импортируем

далее вот этот код

                                {% for page in goods.paginator.page_range %}
                                {% if page >= goods.number|add:-2 and page <= goods.number|add:2 %}
                                    <li class="page-item {% if goods.number == page %} active {% endif %}">
                                        <a class="page-link" href="?page={{page}}">{{ page }}</a>
                                    </li>
                                {% endif %}
                                {% endfor %}

изменяем на вот этот
                        <ul class="pagination justify-content-center my-4">
                            <div class="custom-shadow d-flex">

                                <li class="page-item {% if not goods.has_previous %}disabled{% endif %}">
                                ***************
                                  <a class="page-link" href="{% if goods.has_previous %}?{% change_params page=goods.previous_page_number %}{% else %}#{% endif %}">Назад</a>
                                *****************
                                </li>

                                {% for page in goods.paginator.page_range %}
                                {% if page >= goods.number|add:-2 and page <= goods.number|add:2 %}
                                    <li class="page-item {% if goods.number == page %} active {% endif %}">
                                    ************
                                        <a class="page-link" href="?{% change_params page=page %}">{{ page }}</a>
                                   ***************
                                    </li>
                                {% endif %}
                                {% endfor %}

                                <li class="page-item {% if not goods.has_next %}disabled{% endif %}">
                                  ************
                                  <a class="page-link" href="{% if goods.has_next %}?{% change_params page=goods.next_page_number %}{% else %}#{% endif %}">Вперёд</a>
                                *************
                                </li>                                
                            </div>
                        </ul>

проверяем всё работает
_________________________________________________________________________________

далее сохраняем проект и начинаем работать с поиском на сайте
открываем goods/urls.py

urlpatterns = [
    path('<slug:category_slug>/', views.catalog, name='index'),  
    *******  
    path('search/', views.catalog, name='search'),
    *******    
    path('product/<slug:product_slug>/', views.product, name='product'),
]

заходим в base.html и дополняем код там где навигационная панель ищи
************
                    <form class="d-flex" role="search" action="{% url "catalog:search" %}" method="get">
                    *********
                        <input class="form-control me-2" type="search" name="q" placeholder="Search" aria-label="Search">
                        <button class="btn btn-outline-success text-white" type="submit">Поиск</button>
                    </form>
_________________________
далее переходм в каталог находим в форме фильтров {% comment %} <input type="hidden" name="q" value="request.GET.q"> {% endcomment %}
и раскоментируем
<input type="hidden" name="q" value="request.GET.q">
далее дописываем условия
                                    {% if request.GET.q %}
                                        <input type="hidden" name="q" value="request.GET.q">
                                    {% endif %}
*********
                            <form action="{% if request.GET.q %}{% url "catalog:search" %}{% else %}{% url "catalog:index" slug_url %}{% endif %}" method="get" class="dropdown-menu bg-dark" data-bs-theme="dark">
                              **********  
                                <div class="form-check text-white mx-3">
                                    <input class="form-check-input" type="checkbox" name="on_sale" id="flexCheckDefault" value="on" 
                                    {% if request.GET.on_sale == "on" %}checked{% endif %}>
**********
                                    {% if request.GET.q %}
                                        <input type="hidden" name="q" value="{{ request.GET.q }}">
                                    {% endif %}
                                    **********
_________________________
далее переходим во views

в goods создаем utils.py

далее  в urls

urlpatterns = [
    path('search/', views.catalog, name='search'), 
    path('<slug:category_slug>/', views.catalog, name='index'),        
    path('product/<slug:product_slug>/', views.product, name='product'),
]

далее во views
from django.core.paginator import Paginator
from django.shortcuts import get_list_or_404, render
from goods.models import Products
************
from goods.utils import q_search
******

*********
def catalog(request, category_slug=None):
*********

    page = request.GET.get('page', 1)
    on_sale = request.GET.get('on_sale', None)
    order_by = request.GET.get('order_by', None)
    query = request.GET.get('q', None)

    if category_slug == 'oll':
        goods = Products.objects.all()
        *********
    elif query:
        goods = q_search(query)
        **********

далее в utils.py

from django.core.paginator import Paginator
from django.shortcuts import get_list_or_404, render
from goods.models import Products
from goods.utils import q_search


def catalog(request, category_slug=None):

from goods.models import Products


def q_search(query):
    if query.isdigit() and len(query) <= 5:
        return Products.objects.filter(id=int(query))


_______________________________________
это был поиск по id

_______________________________________

далее поиск по ключевым словам открываем utils.py
поработаем в 
-python manage.py debugsqlshell

добавляем 
- from django.db.models import Q 
в командную строку далее
- from goods.models import Products
далее
- from goods.utils import q_search
x = Products.objects.filter(Q(name__contains='букет') | Q(description__contains='букет'))
x
x = Products.objects.filter(Q(name__contains='Букет') | Q(description__contains='букет'))
x
_________________________________________________________________________________
переходим в utils.py
____________________________
from django.db.models import Q
from goods.models import Products


def q_search(query):
    if query.isdigit() and len(query) <= 5:
        return Products.objects.filter(id=int(query))
    
    keywords = [word for word in query.split() if len(word) > 2]
    q_objects = Q()

    for token in keywords:
        q_objects |= Q(description__icontains=token)
    
    return Products.objects.filter(q_objects)

проверяем работает
______________________

поиск закончет далее работаем с БД postgresSQL











